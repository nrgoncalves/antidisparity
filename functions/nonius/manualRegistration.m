function trf = manualRegistration(A, B)
% GUI for manual coregistration between point sets A and B. Returns a 
% transformation structure (trf) containing the resulting affine matrix
% (trf.T) and the translation values (trf.t)
%
% nrg, '02-Sep-2017 01:07:03'


global h;
global source;

if nargin < 1
    % generate grid of points for testing
    [X, Y] = meshgrid(-4:2:4, -4:2:4);
    source = [X(:), Y(:)];
else
    source = A;
end

if nargin < 2
    % generate a transformed target for testing
    c = 0.2;
    target = source * [cos(c), -1*sin(c); sin(c), cos(c)] + 0.5;
else
    target = B;
end
 
% exclude nan points
excludePoints = any(isnan(source) | isnan(target), 2);
source(excludePoints, :) = [];
target(excludePoints, :) = [];

% axis limits based on target data
ylims = [min(target(:,2)) max(target(:,2))];
h.ylims = ylims + 0.15*[-1,1] .* diff(ylims);

xlims = [min(target(:,1)) max(target(:,1))];
h.xlims = xlims + 0.15*[-1,1] .* diff(xlims);

% Main figure
screenSize = get(0, 'Screensize');
sh = screenSize(4);
figWidth = 600;
figHeight = 300;

h.f = figure('Position', [100, sh-100-figHeight, figWidth, figHeight], ...
             'Visible', 'off');

% Axes
h.mainAxes = axes('Parent', h.f, ...
                  'Units', 'normalized',...
                  'Position', [0.1, 0.12, 0.4, 0.8]); 

axes(h.mainAxes);
h.sPlot = plot(source(:, 1), source(:, 2), 'o');
hold on;
h.tPlot = plot(target(:, 1), target(:, 2), 'o');
xlabel('Horizontal position');
ylabel('Horizontal position');
xlim(h.xlims)
ylim(h.ylims)


% UI controls
% - Sliders
h.xShearSlider = uicontrol('Parent', h.f, ...
    'Style', 'slider',...
    'SliderStep', [0.005, 0.1], ...
    'Units','normalized',...
    'Tag', 'xShear',...
    'Min', 0, 'Max', 3, 'Value', 0,...
    'Position', [0.65 0.8 0.25 0.1],...
    'Callback', @update);

h.xShearText = uicontrol('Parent', h.f, ...
    'Style', 'text',...
    'Units','normalized',...
    'HorizontalAlignment', 'left',...
    'String', 'X-shear',...
    'Position', [0.53 0.8 0.1 0.1]);

h.yShearSlider = uicontrol('Parent', h.f, ...
    'Style', 'slider',...
    'SliderStep', [0.005, 0.1], ...
    'Units','normalized',...
    'Tag', 'yShear',...
    'Min', 0, 'Max', 3, 'Value', 0,...
    'Position', [0.65 0.69 0.25 0.1],...
    'Callback', @update);

h.yShearText = uicontrol('Parent', h.f, ...
    'Style', 'text',...
    'Units','normalized',...
    'HorizontalAlignment', 'left',...
    'String', 'Y-shear',...
    'Position', [0.53 0.69 0.1 0.1]);


h.rotSlider = uicontrol('Parent', h.f, ...
    'Style', 'slider',...
    'SliderStep', [0.0005, 0.1], ...
    'Units','normalized',...
    'Min', -1*pi(), 'Max', pi(), 'Value', 0, ...
    'Tag', 'rotation',...
    'Position', [0.65 0.57 0.25 0.1],...
    'Callback', @update);

h.rotText = uicontrol('Parent', h.f, ...
    'Style', 'text',...
    'Units','normalized',...
    'HorizontalAlignment', 'left',...
    'String', 'Rotation',...
    'Position', [0.53 0.57 0.1 0.1]);

h.xtSlider = uicontrol('Parent', h.f, ...
    'Style', 'slider',...
    'SliderStep', [0.005, 0.1], ...
    'Units','normalized',...
    'Tag', 'xTranslation',...
    'Min', -1, 'Max', 1, 'Value', 0,...
    'Position', [0.65 0.46 0.25 0.1],...
    'Callback', @update);

h.xtText = uicontrol('Parent', h.f, ...
    'Style', 'text',...
    'HorizontalAlignment', 'left',...
    'Units','normalized',...
    'String', 'X-translation',...
    'Position', [0.53 0.46 0.1 0.1]);

h.ytSlider = uicontrol('Parent', h.f, ...
    'Style', 'slider',...
    'SliderStep', [0.005, 0.1], ...
    'Units','normalized',...
    'Tag', 'yTranslation',...
    'Min', -1, 'Max', 1, 'Value', 0,...
    'Position', [0.65 0.35 0.25 0.1],...
    'Callback', @update);

h.ytText = uicontrol('Parent', h.f, ...
    'Style', 'text',...
    'Units','normalized',...
    'HorizontalAlignment', 'left',...
    'String', 'Y-translation',...
    'Position', [0.53 0.35 0.1 0.1]);

% - Buttons
h.resetBtn = uicontrol('Parent', h.f, ...
    'Style', 'pushbutton', 'String', 'Reset',...
    'Units','normalized',...
    'Position', [0.65 0.1 0.25 0.1],...
    'Callback', @resetValues);

h.doneBtn = uicontrol('Parent', h.f, ...
    'Style', 'pushbutton', 'String', 'Done',...
    'Units','normalized',...
    'Position', [0.65 0.24 0.25 0.1],...
    'Callback', @saveAndProceed);
                 
                 
h.f.Visible = 'on';

uiwait(h.f)

if isvalid(h.f)
    p = getTransformValues();

    trf.T = p.xs * p.ys * p.rot;
    trf.t = p.t';
    close(h.f);
else 
    trf.T = [];
    trf.t = [];
end


% Callbacks

function update(src, evt)

global h;
global source;

p = getTransformValues();

tSource = source * p.xs * p.ys * p.rot + repmat(p.t, [size(source,1), 1]);

set(h.sPlot, 'XData', tSource(:,1)')
set(h.sPlot, 'YData', tSource(:,2)')

xlim(h.xlims)
ylim(h.ylims)


function saveAndProceed(src, evnt)

global h;
uiresume(h.f);


function p = getTransformValues()

global h;
cx = get(h.xShearSlider, 'Value');
p.xs = [1, 0; cx, 1];

cy = get(h.yShearSlider, 'Value');
p.ys = [1, cy; 0, 1];

r = get(h.rotSlider, 'Value');
p.rot = [cos(r), -1*sin(r); sin(r), cos(r)];

xt = get(h.xtSlider, 'Value');
yt = get(h.ytSlider, 'Value');
p.t = [xt, yt];


function resetValues(src, evt)

global h;
set(h.xShearSlider, 'Value', 0);
set(h.yShearSlider, 'Value', 0);
set(h.rotSlider, 'Value', 0);
set(h.xtSlider, 'Value', 0)
set(h.ytSlider, 'Value', 0)

update([], []);

